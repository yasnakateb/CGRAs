circuit FS :
  module FS :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip ready_out : UInt<5>, flip fork_mask : UInt<5>, ready_in : UInt<1>}

    wire aux : UInt<1>[5] @[FS.scala 20:19]
    wire temp : UInt<1>[5] @[FS.scala 21:20]
    node _aux_0_T = bits(io.fork_mask, 0, 0) @[FS.scala 24:34]
    node _aux_0_T_1 = not(_aux_0_T) @[FS.scala 24:21]
    node _aux_0_T_2 = bits(io.ready_out, 0, 0) @[FS.scala 24:53]
    node _aux_0_T_3 = or(_aux_0_T_1, _aux_0_T_2) @[FS.scala 24:39]
    node _aux_0_T_4 = bits(_aux_0_T_3, 0, 0) @[FS.scala 24:58]
    aux[0] <= _aux_0_T_4 @[FS.scala 24:16]
    node _aux_1_T = bits(io.fork_mask, 1, 1) @[FS.scala 24:34]
    node _aux_1_T_1 = not(_aux_1_T) @[FS.scala 24:21]
    node _aux_1_T_2 = bits(io.ready_out, 1, 1) @[FS.scala 24:53]
    node _aux_1_T_3 = or(_aux_1_T_1, _aux_1_T_2) @[FS.scala 24:39]
    node _aux_1_T_4 = bits(_aux_1_T_3, 0, 0) @[FS.scala 24:58]
    aux[1] <= _aux_1_T_4 @[FS.scala 24:16]
    node _aux_2_T = bits(io.fork_mask, 2, 2) @[FS.scala 24:34]
    node _aux_2_T_1 = not(_aux_2_T) @[FS.scala 24:21]
    node _aux_2_T_2 = bits(io.ready_out, 2, 2) @[FS.scala 24:53]
    node _aux_2_T_3 = or(_aux_2_T_1, _aux_2_T_2) @[FS.scala 24:39]
    node _aux_2_T_4 = bits(_aux_2_T_3, 0, 0) @[FS.scala 24:58]
    aux[2] <= _aux_2_T_4 @[FS.scala 24:16]
    node _aux_3_T = bits(io.fork_mask, 3, 3) @[FS.scala 24:34]
    node _aux_3_T_1 = not(_aux_3_T) @[FS.scala 24:21]
    node _aux_3_T_2 = bits(io.ready_out, 3, 3) @[FS.scala 24:53]
    node _aux_3_T_3 = or(_aux_3_T_1, _aux_3_T_2) @[FS.scala 24:39]
    node _aux_3_T_4 = bits(_aux_3_T_3, 0, 0) @[FS.scala 24:58]
    aux[3] <= _aux_3_T_4 @[FS.scala 24:16]
    node _aux_4_T = bits(io.fork_mask, 4, 4) @[FS.scala 24:34]
    node _aux_4_T_1 = not(_aux_4_T) @[FS.scala 24:21]
    node _aux_4_T_2 = bits(io.ready_out, 4, 4) @[FS.scala 24:53]
    node _aux_4_T_3 = or(_aux_4_T_1, _aux_4_T_2) @[FS.scala 24:39]
    node _aux_4_T_4 = bits(_aux_4_T_3, 0, 0) @[FS.scala 24:58]
    aux[4] <= _aux_4_T_4 @[FS.scala 24:16]
    temp[0] <= aux[0] @[FS.scala 27:13]
    node _temp_1_T = and(temp[0], aux[1]) @[FS.scala 30:30]
    temp[1] <= _temp_1_T @[FS.scala 30:17]
    node _temp_2_T = and(temp[1], aux[2]) @[FS.scala 30:30]
    temp[2] <= _temp_2_T @[FS.scala 30:17]
    node _temp_3_T = and(temp[2], aux[3]) @[FS.scala 30:30]
    temp[3] <= _temp_3_T @[FS.scala 30:17]
    node _temp_4_T = and(temp[3], aux[4]) @[FS.scala 30:30]
    temp[4] <= _temp_4_T @[FS.scala 30:17]
    io.ready_in <= temp[4] @[FS.scala 33:17]

